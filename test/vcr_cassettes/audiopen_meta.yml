---
http_interactions:
- request:
    method: get
    uri: https://audiopen.ai/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - MetaInspector/5.15.0 (+https://github.com/jaimeiniesta/metainspector)
      Accept-Encoding:
      - identity
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 24 Feb 2024 21:44:53 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Powered-By:
      - Express
      Set-Cookie:
      - audiopen_live_u2main.sig=PtZAmLTTLKFMYQFxb-qysboKyVo; path=/; expires=Tue,
        27 Feb 2024 21:44:53 GMT; domain=audiopen.ai; samesite=none; secure; httponly
      - audiopen_live_u2main=1708811093196x677080128635046000; path=/; expires=Tue,
        27 Feb 2024 21:44:53 GMT; domain=audiopen.ai; samesite=none; secure; httponly
      - audiopen_u1main=1708811093183x868621380977678200; path=/; domain=audiopen.ai;
        samesite=none; secure
      Referrer-Policy:
      - origin
      Cache-Control:
      - no-store
      X-Bubble-Perf:
      - '{"total":136.1,"percents":{"top":{"bubble_cpu":33.8,"block":60.2,"capacity_rl":0,"other_pause":0,"pre_fiber":6.1},"sub":{"pp_userdb":0,"pp_wait_userdb":0,"http_request":0,"serverjson":21.1,"appserver_cache_misses_time":0,"redis":60.1,"fiber_queue":6.9,"capacity_wait":1.4}},"counts":{"pp_userdb":0,"http_request":0,"derived_build":0,"derived_cache_attempts":9,"derived_cache_memory_misses":9,"serverjson":48,"appserver_cache_attempts":1,"appserver_mem_cache_hits":0,"appserver_cache_hits":1,"appserver_cache_misses":0,"redis":90,"fiber_queue":104,"blocks":103},"misc":{"userdb_results":1,"userdb_data":591,"spent_time":6908354}}'
      X-Bubble-Capacity-Used:
      - 0.106 unit-seconds used
      X-Bubble-Capacity-Limit:
      - 0 ms slower
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 85aae472a83e43b6-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 24 Feb 2024 21:44:53 GMT
recorded_with: VCR 6.2.0
